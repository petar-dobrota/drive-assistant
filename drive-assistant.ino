#include <Arduino.h>
#include <Wire.h>
#include <OBD.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CONSTANTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// PINS
const unsigned ALARM_PIN = 13;

// SETTINGS
const int REV_LIMIT = 2500; // TODO: change to 6000

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GLOBALS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

COBDI2C obd;

void setup()
{

  pinMode(ALARM_PIN, OUTPUT);

  obd.begin();
  while (!obd.init());  
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// General functions
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int obdRead(byte pid) {
  int value;
  if (obd.read(pid, value)) {
    return pid;
  } else {
    // TODO: Stop exec
    return -1;
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MAIN CORUTINES: Return true if no other co-routines should be called per a this loop
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool highRevNotify() {
  int rpm = obdRead(PID_RPM);
  digitalWrite(ALARM_PIN, rpm > REV_LIMIT ? HIGH : LOW);

  // high revs notify doesn't interfere with other co-routines
  return false;
}

bool revMatch() {
  // TODO:
  
  return false;
}

bool cruiseControl() {
  // TODO:
  
  return false;
}

bool launchControl() {
  // TODO:
  
  return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LOOP
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void loop()
{

  if (highRevNotify()) {
    return;
  }

  if (revMatch()) {
    return;
  }

  if (cruiseControl()) {
    return;
  }

  if (launchControl()) {
    return;
  }
  
}
